{
  "uid" : "2cb869e579e762c4",
  "name" : "Добавление заметки к контакту из списка контактов менеджера",
  "fullName" : "tests.test_show_contact_page.TestShowContact#test_add_note_to_contact",
  "historyId" : "1651db853daaae321beb082fdeda5c43",
  "time" : {
    "start" : 1713347926776,
    "stop" : 1713347926776,
    "duration" : 0
  },
  "description" : "\n    Цель задачи: протестировать функциональность добавления заметок клиентам в CRM системе. \n    Эта функция должна позволять менеджерам по продажам удобно хранить информацию \n    о своих взаимодействиях с клиентами.",
  "descriptionHtml" : "<pre><code>Цель задачи: протестировать функциональность добавления заметок клиентам в CRM системе. \nЭта функция должна позволять менеджерам по продажам удобно хранить информацию \nо своих взаимодействиях с клиентами.\n</code></pre>\n",
  "status" : "skipped",
  "statusMessage" : "XFAIL after click tab Dashboard msg: 'Something went wrong A client error occurred and your request couldn't be completed.'\n\nselenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/chromium-browser is no longer running, so ChromeDriver is assuming that Chrome has crashed.)",
  "statusTrace" : "request = <SubRequest 'driver' for <Function test_add_note_to_contact>>\n\n    @pytest.fixture(scope=\"function\", autouse=True)\n    def driver(request):\n        download_directory = Config.DOWNLOAD_DIR\n        if not os.path.exists(download_directory):\n            os.makedirs(download_directory)\n        options = Options()\n        prefs = {\n            \"download.default_directory\": download_directory\n        }\n        options.add_experimental_option(\"prefs\", prefs)\n        # options.add_argument(\"--headless\")\n        options.add_argument(\"--no-sandbox\")\n        options.add_argument(\"--disable-dev-shm-usage\")\n        options.add_argument(\"--window-size=1920,1080\")\n>       driver = webdriver.Chrome(options=options)\n\nconftest.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../local/lib/python3.12/site-packages/selenium/webdriver/chrome/webdriver.py:45: in __init__\n    super().__init__(\n../local/lib/python3.12/site-packages/selenium/webdriver/chromium/webdriver.py:61: in __init__\n    super().__init__(command_executor=executor, options=options)\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:208: in __init__\n    self.start_session(capabilities)\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:292: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f4af9b58ce0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: Chrome failed to start: exited a...r/bin/chromium-browser is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\",\"stacktrace\":\"\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\nE         (unknown error: DevToolsActivePort file doesn't exist)\nE         (The process started from chrome location /usr/bin/chromium-browser is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\n\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: WebDriverException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "driver",
    "time" : {
      "start" : 1713347926776,
      "stop" : 1713347927070,
      "duration" : 294
    },
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/chromium-browser is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\n\n",
    "statusTrace" : "  File \"/usr/local/lib/python3.12/site-packages/pluggy/_callers.py\", line 166, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/usr/local/lib/python3.12/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/pluggy/_callers.py\", line 102, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1132, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/_pytest/fixtures.py\", line 906, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/usr/workspace/conftest.py\", line 24, in driver\n    driver = webdriver.Chrome(options=options)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/chrome/webdriver.py\", line 45, in __init__\n    super().__init__(\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/chromium/webdriver.py\", line 61, in __init__\n    super().__init__(command_executor=executor, options=options)\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 208, in __init__\n    self.start_session(capabilities)\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 292, in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "stepsCount" : 0,
    "hasContent" : true
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1713347926325,
      "stop" : 1713347926345,
      "duration" : 20
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "tag",
    "value" : "@pytest.mark.xfail(reason='after click tab Dashboard msg: 'Something went wrong A client error occurred and your request couldn't be completed.'')"
  }, {
    "name" : "tag",
    "value" : "regression_tests"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "test_show_contact_page"
  }, {
    "name" : "subSuite",
    "value" : "TestShowContact"
  }, {
    "name" : "host",
    "value" : "8ca9fec32f2c"
  }, {
    "name" : "thread",
    "value" : "1-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_show_contact_page"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ {
    "name" : "UI-2",
    "url" : "UI-2",
    "type" : "tms"
  } ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 0,
        "skipped" : 2,
        "passed" : 0,
        "unknown" : 0,
        "total" : 2
      },
      "items" : [ {
        "uid" : "868673ed905139b5",
        "status" : "skipped",
        "statusDetails" : "XFAIL\n\nAssertionError: Note with Bank million stand anything up policy paper happy century happen issue identify spring. was not added to main page.Actual text by My Latest Notes list: ['Qui error facere nihil accusamus nisi rerum corrupti facere. Magnam ad optio tempora. Officia nobis ratione voluptatem. Eveniet quas occaecati quibusdam. Dolores fugit itaque harum. Et deserunt aliquid itaque necessitatibus possimus hic rerum. Nihil rem temporibus. Unde sunt sunt itaque illum animi fugiat perspiciatis consequatur. Et quis velit odio doloremque eveniet error et optio quas. Nulla vitae dolores optio dolorem nulla. Quibusdam sunt vel numquam quam et et aut. Ut sed pariatur quia. Iste nihil voluptas nobis voluptas corrupti sed. Illo modi alias a praesentium tempore nobis dolore veritatis. Error quasi laborum id necessitatibus dolorem qui molestias porro. Commodi omnis sint eum at. Itaque quibusdam incidunt non sit. Numquam quam autem. Mollitia facilis explicabo ut. Ea qui nisi enim aut velit.', 'Sunt id dolore et. Repellat aut facilis sequi qui voluptatem aut. Fugit aut architecto sint sed ducimus eos ab.', 'Rerum perferendis iste quos rerum officiis quae atque repellat numquam. Deleniti quam molestiae exercitationem. In sunt natus et aliquid animi aut. Facere molestias necessitatibus perferendis blanditiis qui animi. Velit nemo corporis eaque cupiditate. Consectetur voluptas numquam rerum. Perferendis delectus dignissimos culpa repellat id qui deserunt vitae. Expedita dolorem tempora reiciendis sed dolores ut sit cum dolor. Reiciendis ipsa illum vero corrupti voluptatum aut. Nemo amet vitae vitae quod sint possimus blanditiis earum. Nam eaque et.', 'Incidunt ad omnis quos necessitatibus vero debitis. Culpa dicta optio. Officiis et labore laudantium eos qui. Totam necessitatibus voluptas ipsam vitae. Reprehenderit ut consectetur beatae sit odit dolores quia. Ratione fuga voluptatibus voluptatem qui facere impedit. Earum ut in eveniet quis ad. Aliquam tenetur fugit reprehenderit cum sint distinctio suscipit. Rerum quasi aut voluptatem aut maxime voluptates repellat ut. Exercitationem harum dicta quis. Excepturi doloribus mollitia illum. Quia qui nisi id corrupti molestiae perferendis sit distinctio possimus. Quam perferendis molestiae et recusandae tempora facilis. Rerum repellat id sint sequi. Doloribus explicabo impedit.', 'Autem voluptas nisi placeat aliquam labore rem. Delectus iusto et fugiat labore corrupti quia expedita molestiae. Est atque nihil cupiditate. Sunt dolorum qui quae aut ex voluptate. Id voluptas velit. Totam architecto sit eveniet et ex qui sunt. Ea ratione omnis. Voluptatibus earum sint omnis dolores reprehenderit quia assumenda. Quo vel veritatis. Minus quod voluptatem quaerat consequatur. Nihil et ut temporibus culpa in impedit necessitatibus ut quis. In ut perferendis ut aut consectetur aperiam. Rerum ratione error et non tempore sint. Suscipit ut maiores expedita. Veniam corporis quia excepturi ipsum et accusantium mollitia totam nobis. Aut nihil sequi doloribus praesentium facilis.']\nassert 'Bank million stand anything up policy paper happy century happen issue identify spring.' in ['Qui error facere nihil accusamus nisi rerum corrupti facere. Magnam ad optio tempora. Officia nobis ratione voluptatem. Eveniet quas occaecati quibusdam. Dolores fugit itaque harum. Et deserunt aliquid itaque necessitatibus possimus hic rerum. Nihil rem temporibus. Unde sunt sunt itaque illum animi fugiat perspiciatis consequatur. Et quis velit odio doloremque eveniet error et optio quas. Nulla vitae dolores optio dolorem nulla. Quibusdam sunt vel numquam quam et et aut. Ut sed pariatur quia. Iste nihil voluptas nobis voluptas corrupti sed. Illo modi alias a praesentium tempore nobis dolore veritatis. Error quasi laborum id necessitatibus dolorem qui molestias porro. Commodi omnis sint eum at. Itaque quibusdam incidunt non sit. Numquam quam autem. Mollitia facilis explicabo ut. Ea qui nisi enim aut velit.', 'Sunt id dolore et. Repellat aut facilis sequi qui voluptatem aut. Fugit aut architecto sint sed ducimus eos ab.', 'Rerum perferendis iste quos rerum officiis quae atque repellat numquam. Deleniti quam molestiae exercitationem. In sunt natus et aliquid animi aut. Facere molestias necessitatibus perferendis blanditiis qui animi. Velit nemo corporis eaque cupiditate. Consectet...ae sit odit dolores quia. Ratione fuga voluptatibus voluptatem qui facere impedit. Earum ut in eveniet quis ad. Aliquam tenetur fugit reprehenderit cum sint distinctio suscipit. Rerum quasi aut voluptatem aut maxime voluptates repellat ut. Exercitationem harum dicta quis. Excepturi doloribus mollitia illum. Quia qui nisi id corrupti molestiae perferendis sit distinctio possimus. Quam perferendis molestiae et recusandae tempora facilis. Rerum repellat id sint sequi. Doloribus explicabo impedit.', 'Autem voluptas nisi placeat aliquam labore rem. Delectus iusto et fugiat labore corrupti quia expedita molestiae. Est atque nihil cupiditate. Sunt dolorum qui quae aut ex voluptate. Id voluptas velit. Totam architecto sit eveniet et ex qui sunt. Ea ratione omnis. Voluptatibus earum sint omnis dolores reprehenderit quia assumenda. Quo vel veritatis. Minus quod voluptatem quaerat consequatur. Nihil et ut temporibus culpa in impedit necessitatibus ut quis. In ut perferendis ut aut consectetur aperiam. Rerum ratione error et non tempore sint. Suscipit ut maiores expedita. Veniam corporis quia excepturi ipsum et accusantium mollitia totam nobis. Aut nihil sequi doloribus praesentium facilis.']",
        "time" : {
          "start" : 1713293679851,
          "stop" : 1713293685527,
          "duration" : 5676
        }
      } ]
    },
    "tags" : [ "@pytest.mark.xfail(reason='after click tab Dashboard msg: 'Something went wrong A client error occurred and your request couldn't be completed.'')", "regression_tests" ]
  },
  "source" : "2cb869e579e762c4.json",
  "parameterValues" : [ ]
}